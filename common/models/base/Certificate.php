<?php

// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;

/**
 * This is the base-model class for table "certificate".
 *
 * @property integer $id_certificate
 * @property integer $id_user_client
 * @property integer $id_user_maker
 * @property integer $id_user_invoicer
 * @property integer $id_product_type
 * @property string $du
 * @property string $created
 * @property string $modified
 *
 * @property string $id_docs_bill_lading
 * @property string $id_docs_freight_invoice
 * @property string $docs_bill_lading
 * @property string $docs_freight_invoice
 *
 * @property string $docs_commercial_invoice
 * @property string $docs_validated_file
 * @property string $docs_draft_request_signed
 * @property string $docs_siga_draft_request
 * @property string $docs_proof_of_payment
 * @property string $docs_rejected_draft_validation
 * @property string $docs_other
 * @property string $id_docs_proof_of_payment
 * @property string $id_docs_siga_draft_request
 * @property string $id_docs_validated_file
 * @property string $arc_number
 * @property string $arc_value
 * @property string $requester_name
 * @property string $requester_email
 * @property string $exporter_name
 * @property string $exporter_email
 * @property string $exporter_phone
 * @property string $exporter_address
 * @property integer $exporter_id_city
 * @property integer $exporter_id_country
 * @property string $guichet_pr_nr
 * @property string $guichet_statistic_nr
 * @property string $importer_name
 * @property string $importer_email
 * @property string $importer_phone
 * @property string $importer_address
 * @property string $importer_vat
 * @property integer $importer_id_city
 * @property integer $importer_id_country
 * @property integer $importer_cc
 * @property string $importer_bank
 * @property string $vessel_name
 * @property string $vessel_voyage_nr
 * @property string $vessel_shipping_line
 * @property string $vessel_incoterm
 * @property string $vessel_bl_nr
 * @property string $vessel_loading_date
 * @property integer $forwarding_agent
 * @property integer $lading_packages_nr
 * @property double $lading_weight
 * @property double $lading_volume
 * @property string $lading_chassis_nr
 * @property integer $lading_40ft_nr
 * @property integer $lading_20ft_nr
 * @property integer $cost_invoice_currency
 * @property string $cost_invoice_value
 * @property integer $cost_fob_currency
 * @property string $cost_fob_value
 * @property integer $cost_oceanfreight_currency
 * @property string $cost_oceanfreight_value
 * @property integer $cost_baf_currency
 * @property string $cost_baf_value
 * @property integer $cost_caf_currency
 * @property string $cost_caf_value
 * @property integer $cost_thc_currency
 * @property string $cost_thc_value
 * @property integer $cost_insurance_currency
 * @property string $cost_insurance_value
 * @property integer $cost_extracharges_currency
 * @property string $cost_extracharges_value
 * @property integer $goods_origin_id_country
 * @property integer $goods_origin_id_harbor
 * @property integer $goods_loading_id_country
 * @property integer $goods_loading_id_harbor
 * @property string $goods_loading_harbor
 * @property string $goods_destination_harbor
 * @property string $goods_loading_date
 * @property string $goods_estimatedelivery_date
 * @property string $goods_description
 * @property string $goods_imgcode
 * @property string $price
 * @property integer $last_status
 * @property integer $payment_method
 * @property integer $reject
 * @property integer $other_payment_proof
 *
 * @property \common\models\Country $goodsLoadingIdCountry
 * @property \common\models\Country $goodsOriginIdCountry
 * @property \common\models\User $idUserClient
 * @property \common\models\City $exporterIdCity
 * @property \common\models\Country $exporterIdCountry
 * @property \common\models\Harbor $goodsLoadingIdHarbor
 * @property \common\models\Harbor $goodsOriginIdHarbor
 * @property \common\models\City $importerIdCity
 * @property \common\models\Country $importerIdCountry
 * @property \common\models\User $idUserInvoicer
 * @property \common\models\User $idUserMaker
 * @property \common\models\ProductType $idProductType
 * @property \common\models\CertificateDu[] $certificateDus
 * @property \common\models\CertificateChassi[] $certificateChassis
 * @property \common\models\CertificateContainer[] $certificateContainers
 * @property \common\models\CertificateGuichetDi[] $certificateGuichetDis
 * @property \common\models\CertificateStatus[] $certificateStatuses
 * @property \common\models\CertificateTranshipment[] $certificateTranshipments
 * @property \common\models\InvoicesCertificate[] $invoicesCertificates
 * @property \common\models\Invoice[] $idInvoices
 * @property string $aliasModel
 */
abstract class Certificate extends \yii\db\ActiveRecord {
    
    
    
    
    const PAYMENT_METHOD_CHECK = 0;
    const PAYMENT_METHOD_CASH = 1;
    
    public static function getPaymentMethodOptions($cssClass = false) {
        return !$cssClass ? [
            self::PAYMENT_METHOD_CHECK => Yii::t('models', 'Check'),//1
            self::PAYMENT_METHOD_CASH => Yii::t('models', 'Cash'),//2
        ]: [
            self::PAYMENT_METHOD_CHECK => 'blue',
            self::PAYMENT_METHOD_CASH => 'green'];
    }
    
	/**
	 * @inheritdoc
	 */
	public static function tableName() {
		return 'certificate';
	}
	
	/**
	 * @inheritdoc
	 */
	public function rules() {
		return [
			[['id_user_client', 'requester_name', 'requester_email', 'exporter_name', /*'exporter_email', 'exporter_phone',*/ 'exporter_address', /*'exporter_id_city', 'exporter_id_country',*/ 'importer_name', /*'importer_email', 'importer_phone',*/ 'importer_address', 'importer_vat', /*'importer_id_city', 'importer_id_country',*/ 'vessel_name', 'vessel_voyage_nr', 'vessel_shipping_line', /*'vessel_incoterm',*/ 'vessel_bl_nr', /*'vessel_loading_date',*/ 'forwarding_agent', /*'lading_packages_nr', 'lading_weight', 'lading_volume', 'cost_invoice_currency',*/
              'cost_invoice_value'], 'required'],
			[['id_user_client', 'id_user_maker', 'id_user_invoicer', 'id_product_type', 'id_docs_bill_lading', 'id_docs_commercial_invoice',
                'id_docs_freight_invoice','id_docs_draft_request_signed','id_docs_proof_of_payment', 'id_docs_validated_file','id_docs_siga_draft_request',
                'id_docs_other', 'id_docs_certificate','lading_packages_nr', 'lading_40ft_nr', 'lading_20ft_nr', 'cost_invoice_currency',
                'cost_fob_currency', 'cost_oceanfreight_currency', 'cost_baf_currency', 'cost_caf_currency', 'cost_thc_currency', 'cost_insurance_currency',
                'cost_extracharges_currency','last_status', 'importer_cc', 'payment_method', 'reject', 'other_payment_proof'], 'integer'],

			[['created', 'modified', 'vessel_loading_date', 'importer_bank', 'goods_origin_id_country', 'goods_loading_id_country', 'goods_loading_harbor', 'goods_description'], 'safe'],
			[
				[
					'lading_weight',
					'lading_volume',
					'cost_invoice_value',
					'cost_fob_value',
					'cost_oceanfreight_value',
					'cost_baf_value',
					'cost_caf_value',
					'cost_thc_value',
					'cost_insurance_value',
					'cost_extracharges_value',
					'price',
					'city'
				],
				'number'
			],
			[['goods_description','id_docs_rejected_draft_validation'], 'string'],
			[['du','arc_number','arc_value','exporter_name', 'exporter_email', 'exporter_address', 'importer_name', 'importer_email', 'importer_address', 'importer_vat', 'goods_imgcode', 'goods_origin_harbor', 'goods_loading_harbor', 'exporter_id_city', 'importer_id_city', 'forwarding_agent', 'goods_destination_harbor' ], 'string', 'max' => 255],
			[['exporter_phone', 'importer_phone', 'goods_loading_date', 'goods_deliveryestimate_date'], 'string', 'max' => 20],
			[['exporter_id_country', 'importer_id_country','goods_origin_id_country', 'goods_loading_id_country'], 'string', 'max' => 2],
			[['guichet_pr_nr', 'guichet_statistic_nr', 'vessel_name', 'vessel_voyage_nr', 'vessel_shipping_line', 'vessel_incoterm', 'vessel_bl_nr', 'lading_chassis_nr'], 'string', 'max' => 50],
			[['goods_loading_id_country'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Country::className(), 'targetAttribute' => ['goods_loading_id_country' => 'cca2']],
			[['goods_origin_id_country'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Country::className(), 'targetAttribute' => ['goods_origin_id_country' => 'cca2']],
			[['id_user_client'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\User::className(), 'targetAttribute' => ['id_user_client' => 'id']],
			//[['exporter_id_city'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\City::className(), 'targetAttribute' => ['exporter_id_city' => 'id_city']],
			[['exporter_id_country'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Country::className(), 'targetAttribute' => ['exporter_id_country' => 'cca2']],
			//[['importer_id_city'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\City::className(), 'targetAttribute' => ['importer_id_city' => 'id_city']],
			[['importer_id_country'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Country::className(), 'targetAttribute' => ['importer_id_country' => 'cca2']],
			[['id_user_invoicer'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\User::className(), 'targetAttribute' => ['id_user_invoicer' => 'id']],
			[['id_user_maker'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\User::className(), 'targetAttribute' => ['id_user_maker' => 'id']],
			[['id_product_type'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\ProductType::className(), 'targetAttribute' => ['id_product_type' => 'id_product_type']],
			//[['docs_bill_lading_file', 'docs_commercial_invoice_file', 'docs_freight_invoice_file', 'docs_draft_request_signed_file'], 'file', 'skipOnEmpty' => false, 'extensions' => 'png, jpg, pdf', 'maxSize'=>'15000000']
			
			// CHANGED FROM DROPDOWN TO TEXTINPUT
			//[['goods_loading_id_harbor'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Harbor::className(), 'targetAttribute' => ['goods_loading_id_harbor' => 'id_harbor']],
			//[['goods_origin_harbor'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Harbor::className(), 'targetAttribute' => ['goods_origin_id_harbor' => 'id_harbor']],
		];
	}
	
	/**
	 * uploads
	 */
	public function uploadBillLading() {
		if ( $this->docs_bill_lading->saveAs("docs/".$this->docs_bill_lading->baseName . '.' . $this->docs_bill_lading->extension)) {
			return true;
		} else {
			return false;
		}
	}
	
	public function uploadCommercialInvoice() {
		if ( $this->docs_commercial_invoice->saveAs("docs/".$this->docs_commercial_invoice->baseName . '.' . $this->docs_commercial_invoice->extension)) {
			return true;
		} else {
			return false;
		}
	}
	
	public function uploadFreightInvoice() {
		if ($this->docs_freight_invoice->saveAs("docs/".$this->docs_freight_invoice->baseName . '.' . $this->docs_freight_invoice->extension)){
			return true;
		} else {
			return false;
		}
	}
	
	public function uploadDraftRequestSigned() {
		if ($this->docs_draft_request_signed->saveAs("docs/".$this->docs_draft_request_signed->baseName . '.' . $this->docs_draft_request_signed->extension)){
			return true;
		} else {
			return false;
		}
	}
	
	/**
	 * @inheritdoc
	 */
	public function attributeLabels() {
		return [
			'id_certificate' => Yii::t('models', 'Id Certificate'),
			'id_user_client' => Yii::t('models', 'Id User Client'),
			'id_user_maker' => Yii::t('models', 'Id User Maker'),
			'id_user_invoicer' => Yii::t('models', 'Id User Invoicer'),
			'id_product_type' => Yii::t('models', 'Product Type'),
			'du' => Yii::t('models', 'Du'),
			'created' => Yii::t('models', 'Created'),
			'modified' => Yii::t('models', 'Modified'),
			'docs_bill_lading' => Yii::t('models', 'Docs Bill Lading'),
			'docs_commercial_invoice' => Yii::t('models', 'Docs Commercial Invoice'),
            'docs_draft_request_signed' => Yii::t('models', 'Docs Draft Request Signed'),
            'docs_validated_file' => Yii::t('models', 'Docs Validated File'),
            'docs_other' => Yii::t('models', 'Other File'),
			'requester_name' => Yii::t('models', 'Requester Name'),
			'requester_email' => Yii::t('models', 'Requester Email'),
			'exporter_name' => Yii::t('models', 'Exporter Name'),
			'exporter_email' => Yii::t('models', 'Email'),
			'exporter_phone' => Yii::t('models', 'Phone'),
			'exporter_address' => Yii::t('models', 'Exporter Address'),
			'exporter_id_city' => Yii::t('models', 'City'),
			'exporter_id_country' => Yii::t('models', 'Country'),
			'guichet_pr_nr' => Yii::t('models', 'Transaction PR Number'),
			'guichet_statistic_nr' => Yii::t('models', 'Statistical NIF Number'),
			'importer_name' => Yii::t('models', 'Name'),
			'importer_email' => Yii::t('models', 'Email'),
			'importer_phone' => Yii::t('models', 'Phone'),
			'importer_address' => Yii::t('models', 'Address'),
			'importer_vat' => Yii::t('models', 'VAT number'),
			'importer_id_city' => Yii::t('models', 'City'),
			'importer_id_country' => Yii::t('models', 'Country'),
			'importer_cc' => Yii::t('models', 'Credit Letter'),
			'importer_bank' => Yii::t('models', 'Bank'),
			'vessel_name' => Yii::t('models', 'Name'),
			'vessel_voyage_nr' => Yii::t('models', 'Voyage Nr'),
			'vessel_shipping_line' => Yii::t('models', 'Shipping Line'),
			'vessel_incoterm' => Yii::t('models', 'Incoterm'),
			'vessel_bl_nr' => Yii::t('models', 'Bill of Lading Nr.'),
			'vessel_loading_date' => Yii::t('models', 'Loading Date'),
			'forwarding_agent' => Yii::t('models','Forwarding Agent'),
			'lading_packages_nr' => Yii::t('models', 'Number of Packages'),
			'lading_weight' => Yii::t('models', 'Weight -kg'),
			'lading_volume' => Yii::t('models', 'Volume - m3'),
			'lading_chassis_nr' => Yii::t('models', 'Nb Chassis'),
			'lading_40ft_nr' => Yii::t('models', 'Nb 40ft'),
			'lading_20ft_nr' => Yii::t('models', 'Nb 20ft'),
			'cost_invoice_currency' => Yii::t('models', 'Invoice Currency'),
			'cost_invoice_value' => Yii::t('models', 'Invoice Value'),
			'cost_fob_currency' => Yii::t('models', 'Fob Currency'),
			'cost_fob_value' => Yii::t('models', 'Fob Value'),
			'cost_oceanfreight_currency' => Yii::t('models', 'Oceanfreight Currency'),
			'cost_oceanfreight_value' => Yii::t('models', 'Oceanfreight Value'),
			'cost_baf_currency' => Yii::t('models', 'Baf Currency'),
			'cost_baf_value' => Yii::t('models', 'Baf Value'),
			'cost_caf_currency' => Yii::t('models', 'Caf Currency'),
			'cost_caf_value' => Yii::t('models', 'Caf Value'),
			'cost_thc_currency' => Yii::t('models', 'Thc Currency'),
			'cost_thc_value' => Yii::t('models', 'Thc Value'),
			'cost_insurance_currency' => Yii::t('models', 'Insurance Currency'),
			'cost_insurance_value' => Yii::t('models', 'Insurance Value'),
			'cost_extracharges_currency' => Yii::t('models', 'Extracharges Currency'),
			'cost_extracharges_value' => Yii::t('models', 'Extracharges Value'),
			'goods_origin_id_country' => Yii::t('models', 'Origin Id Country'),
			'goods_origin_harbor' => Yii::t('models', 'Port of Origin'),
			'goods_loading_id_country' => Yii::t('models', 'Country of Origin'),
			'goods_loading_harbor' => Yii::t('models', 'Port of Loading'),
			'goods_description' => Yii::t('models', 'Goods Description  as per BL and to be mentioned on certificate'),
			'goods_imgcode' => Yii::t('models', 'IMDG Code'),
			'goods_deliveryestimate_date' => Yii::t('models', 'Estimate Date of Arrival (ETA)'),
			'goods_loading_date' => Yii::t('models', 'Loading Date (ETS)'),
			'price' => Yii::t('models', 'Price'),
			'goods_destination_harbor' => Yii::t('models', 'Port of Destination'),
            'reject' => Yii::t('models', 'Rejected ?'),
			'payment_method' => Yii::t('models', 'Payment Method'),
			'other_payment_proof' => Yii::t('models', 'Other Payment Proof'),
		];
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getDocsBillLading() {
		return $this->hasOne(\common\models\Doc::className(), ['id_doc' => 'id_docs_bill_lading']);
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getDocsCommercialInvoice() {
		return $this->hasOne(\common\models\Doc::className(), ['id_doc' => 'id_docs_commercial_invoice']);
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getDocsFreightInvoice() {
		return $this->hasOne(\common\models\Doc::className(), ['id_doc' => 'id_docs_freight_invoice']);
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getDocsDraftRequestSigned() {
		return $this->hasOne(\common\models\Doc::className(), ['id_doc' => 'id_docs_draft_request_signed']);
	}
    
    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDocsSigaDraftRequest() {
        return $this->hasOne(\common\models\Doc::className(), ['id_doc' => 'id_docs_siga_draft_request']);
    }
    
    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDocsOther() {
        return $this->hasOne(\common\models\Doc::className(), ['id_doc' => 'id_docs_other']);
    }
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getDocsValidatedFile() {
		return $this->hasOne(\common\models\Doc::className(), ['id_doc' => 'id_docs_validated_file']);
	}
    
    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDocsProofOfPayment() {
        return $this->hasOne(\common\models\Doc::className(), ['id_doc' => 'id_docs_proof_of_payment']);
    }
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getDocsCertificate() {
		return $this->hasOne(\common\models\Doc::className(), ['id_doc' => 'id_docs_certificate']);
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getGoodsLoadingIdCountry() {
		return $this->hasOne(\common\models\Country::className(), ['id_country' => 'goods_loading_id_country']);
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getGoodsOriginIdCountry() {
		return $this->hasOne(\common\models\Country::className(), ['id_country' => 'goods_origin_id_country']);
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getExporterIdCity() {
		return $this->hasOne(\common\models\City::className(), ['id_city' => 'exporter_id_city']);
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getExporterIdCountry() {
		return $this->hasOne(\common\models\Country::className(), ['cca2' => 'exporter_id_country']);
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getGoodsLoadingIdHarbor() {
		return $this->hasOne(\common\models\Harbor::className(), ['id_harbor' => 'goods_loading_id_harbor']);
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getGoodsOriginIdHarbor() {
		return $this->hasOne(\common\models\Harbor::className(), ['id_harbor' => 'goods_origin_id_harbor']);
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getImporterIdCity() {
		return $this->hasOne(\common\models\City::className(), ['id_city' => 'importer_id_city']);
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getImporterIdCountry() {
		return $this->hasOne(\common\models\Country::className(), ['id_country' => 'importer_id_country']);
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getClient() {
		return $this->hasOne(\common\models\User::className(), ['id' => 'id_user_client']);
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getInvoicer() {
		return $this->hasOne(\common\models\User::className(), ['id' => 'id_user_invoicer']);
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getMaker() {
		return $this->hasOne(\common\models\User::className(), ['id' => 'id_user_maker']);
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getIdProductType() {
		return $this->hasOne(\common\models\ProductType::className(), ['id_product_type' => 'id_product_type']);
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getCertificateChassis() {
		return $this->hasMany(\common\models\CertificateChassis::className(), ['id_certificate' => 'id_certificate'])->indexBy('id_certificate_chassi');
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getCertificateContainers() {
		return $this->hasMany(\common\models\CertificateContainers::className(), ['id_certificate' => 'id_certificate'])->indexBy('id_certificate_container');
	}
	public function getCertificateContainers20() {
		return $this->hasMany(\common\models\CertificateContainers::className(), ['id_certificate' => 'id_certificate'])->where(['size'=>1])->indexBy('id_certificate_container');
	}
	public function getCertificateContainers40() {
		return $this->hasMany(\common\models\CertificateContainers::className(), ['id_certificate' => 'id_certificate'])->where(['size'=>2])->indexBy('id_certificate_container');
	}
	public function getCertificateTariffcodes() {
		return $this->hasMany(\common\models\CertificateTariffcodes::className(), ['id_certificate' => 'id_certificate'])->indexBy('id_certificate_tariffcode');
	}
    public function getCertificateContainersTypes() {
        return $this->hasMany(\common\models\CertificateContainersTypes::className(), ['id_certificate' => 'id_certificate'])->indexBy('id_certificate_container_type');
    }
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getCertificateGuichet() {
		return $this->hasMany(\common\models\CertificateGuichet::className(), ['id_certificate' => 'id_certificate'])->indexBy('id_certificate_guichet');
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getCertificateStatuses() {
		return $this->hasMany(\common\models\CertificateStatus::className(), ['id_certificate' => 'id_certificate']);
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getCertificateTranshipments() {
		return $this->hasMany(\common\models\CertificateTranshipments::className(), ['id_certificate' => 'id_certificate'])->indexBy('id_certificate_transhipment');
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getInvoicesCertificates() {
		return $this->hasOne(\common\models\InvoicesCertificates::className(), ['id_certificate' => 'id_certificate']);
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getIdInvoices() {
		return $this->hasMany(\common\models\Invoices::className(), ['id_invoice' => 'id_invoice'])
			->viaTable('invoices_certificates', ['id_certificate' => 'id_certificate']);
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getCertificateDus() {
		return $this->hasMany(\common\models\CertificateDus::className(), ['id_certificate' => 'id_certificate'])->indexBy('id_certificate_dus');
	}
}
