<?php

// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use Yii;
use common\models\CityCache;

/**
 * This is the base-model class for table "city".
 *
 * @property integer $id_city
 * @property integer $id_country
 * @property string $created
 * @property string $modified
 * @property string $name
 *
 * @property \common\models\Certificate[] $certificates
 * @property \common\models\Certificate[] $certificates0
 * @property string $aliasModel
 */
abstract class City extends \yii\db\ActiveRecord {

    /**
     * @inheritdoc
     */
    public static function tableName() {
        return 'city';
    }

    /**
     * @inheritdoc
     */
    public function rules() {
        return [
            [['id_country', 'created', 'name'], 'required'],
            [['id_country'], 'integer'],
            [['created', 'modified'], 'safe'],
            [['name'], 'string', 'max' => 255]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels() {
        return [
            'id_city' => Yii::t('models', 'Id City'),
            'id_country' => Yii::t('models', 'Id Country'),
            'created' => Yii::t('models', 'Created'),
            'modified' => Yii::t('models', 'Modified'),
            'name' => Yii::t('models', 'Name'),
        ];
    }

    public static function getCity($country) {
        $get = Yii::$app->request->get();
        $results = [];
        if (!empty($get['q'])) {
            $q = $get['q'];
            $results = City::searchCity($q, $country);
        }
        return $results;
    }

    public static function getHarbor($country) {
        $get = Yii::$app->request->get();
        $results = [];
        if (!empty($get['q'])) {
            $q = $get['q'];
            $results = City::searchHarbor($q, $country);
        }
        return $results;
    }

    public static function searchCity($q, $country) {
        $featureCodes = ["PPLC", "PPLA", "PPLA2", "PPLA3", "PPL"];
        $featureCode = implode("&featureCode=", $featureCodes);
        $cityCache = CityCache::getCityCache($q, $featureCode, $country);
        if (!empty($cityCache->geonames)) {
            return $cityCache;
        }
    }

    public static function searchHarbor($q, $country) {
        $featureCodes = ["HBR", "HBRX"];
        $featureCode = implode("&featureCode=", $featureCodes);
        $cityCache = CityCache::getCityCache($q, $featureCode, $country);
        if (!empty($cityCache->geonames)) {
            return $cityCache;
        }
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCertificates() {
        return $this->hasMany(\common\models\Certificate::className(), ['exporter_id_city' => 'id_city']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCertificatesImporter() {
        return $this->hasMany(\common\models\Certificate::className(), ['importer_id_city' => 'id_city']);
    }

    /**
     * @inheritdoc
     * @return \common\models\query\CityQuery the active query used by this AR class.
     */
    /* public static function find()
      {
      return new \common\models\query\CityQuery(get_called_class());
      } */
}
