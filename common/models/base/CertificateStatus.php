<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace common\models\base;

use lajax\translatemanager\helpers\Language as Lx;
use Yii;

/**
 * This is the base-model class for table "certificate_status".
 *
 * @property integer $id_certificate_status
 * @property integer $id_certificate
 * @property integer $id_user
 * @property string $created
 * @property integer $status
 * @property string $obs
 *
 * @property \common\models\Certificate $idCertificate
 * @property string $aliasModel
 */
abstract class CertificateStatus extends \yii\db\ActiveRecord
{
	
	/**
	1,2,3,4,6,7,8,5,9,10 passos
	estado 3 (siga draft file, arc number, arc value)
	estado 4 (rejeita com possibilidade de fazer upload a multi files)
	estado 5 ( apenas validated file)
	estado 10 ( o estado em que se marca um certificado como terminado) (edited)
	estado 1 (draft request signed Ã© opcional mas para poder avancar pro estado 2 Ã© obrigatoria)
	os demais continuam os mesmos
	 */
	
	const STATUS_CREATED = 1;
	const STATUS_EDITED = 2;
	const STATUS_SUBMITTED = 3;
	const STATUS_PROCESS = 4;
	const STATUS_REJECTED = 5;
	const STATUS_ACCEPTED = 6;
	const STATUS_INVOICE = 7;
	const STATUS_VALIDATION = 8;
	const STATUS_EMITTED = 9;
	const STATUS_DRAFT_VALIDATION = 10;
	const STATUS_DRAFT = 11;
	const STATUS_TO_VALIDATE = 12;
    const STATUS_PAYMENT_VALIDATION = 13;
    const STATUS_CERTIFICATE_CLOSURE = 14;
	
	
	/**
	 * @param bool $cssClass
	 *
	 * @return array
	 */
	public static function getStatusOptions($cssClass = false) {
		
		
		return !$cssClass ? [
			self::STATUS_CREATED => Yii::t('models', 'Draft Request'),//1
            self::STATUS_SUBMITTED => Yii::t('models', 'Request'),//2
            self::STATUS_PROCESS => Yii::t('models', 'In Process'),//3
            self::STATUS_DRAFT_VALIDATION=> Yii::t('models', 'Draft Validation'),//4
            
            self::STATUS_ACCEPTED => Yii::t('models', 'Wait for invoice'),//6
            
            self::STATUS_INVOICE => Yii::t('models', 'Invoice Payment'),//7
            
            self::STATUS_PAYMENT_VALIDATION => Yii::t('models', 'Payment Validation'),//8
            
            self::STATUS_TO_VALIDATE => Yii::t('models', 'To Validate'),//5
            self::STATUS_EMITTED => Yii::t('models', 'To Print'),//9
            self::STATUS_CERTIFICATE_CLOSURE => Yii::t('models', 'Certificate Closure'),//10
            
            /*
             self::STATUS_DRAFT => Yii::t('models', '5-Waiting for files'),
            
			self::STATUS_EDITED => Yii::t('models', 'Edited'),
			self::STATUS_REJECTED => Yii::t('models', 'Rejected'),
            self::STATUS_VALIDATION => Yii::t('models', 'To Validation'),
			*/
            //TO OMIT
            //
		] : [
			self::STATUS_CREATED => 'blue',
			self::STATUS_EDITED => 'blue',
			self::STATUS_SUBMITTED => 'blue',
			self::STATUS_PROCESS => 'green',
			self::STATUS_REJECTED => 'red',
			self::STATUS_ACCEPTED => 'green',
			self::STATUS_INVOICE => 'green',
			self::STATUS_VALIDATION => 'green',
			self::STATUS_EMITTED => 'green',
			self::STATUS_DRAFT_VALIDATION => 'blue',
			self::STATUS_DRAFT => 'blue',
			self::STATUS_TO_VALIDATE => 'blue',
            self::STATUS_PAYMENT_VALIDATION => 'blue',
            self::STATUS_CERTIFICATE_CLOSURE => 'green',
		];
	}
	
	
	
	/**
	 * @inheritdoc
	 */
	public static function tableName()
	{
		return 'certificate_status';
	}
	
	
	/**
	 * @inheritdoc
	 */
	public function rules()
	{
		return [
			[['id_certificate', 'id_user', 'status'], 'required'],
			[['id_certificate', 'id_user', 'status'], 'integer'],
			[['created', 'obs'], 'safe'],
			[['obs'], 'string', 'max' => 255],
			[['id_certificate'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\Certificate::className(), 'targetAttribute' => ['id_certificate' => 'id_certificate']],
			[['id_user'], 'exist', 'skipOnError' => true, 'targetClass' => \common\models\User::className(), 'targetAttribute' => ['id_user' => 'id']]
		];
	}
	
	/**
	 * @inheritdoc
	 */
	public function attributeLabels()
	{
		return [
			'id_certificate_status' => Yii::t('models', 'ID Certificate Status'),
			'id_certificate' => Yii::t('models', 'ID Certificate'),
			'id_user' => Yii::t('models', 'ID User'),
			'created' => Yii::t('models', 'Created'),
			'status' => Yii::t('models', 'Status'),
			'obs' => Yii::t('models', 'Obs'),
		];
	}
	
	/**
	 * @inheritdoc
	 */
	public function attributeHints()
	{
		return array_merge(parent::attributeHints(), []);
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getCertificate()
	{
		return $this->hasOne(\common\models\Certificate::className(), ['id_certificate' => 'id_certificate']);
	}
	
	/**
	 * @return \yii\db\ActiveQuery
	 */
	public function getUser()
	{
		return $this->hasOne(\common\models\User::className(), ['id' => 'id_user']);
	}
	
}
